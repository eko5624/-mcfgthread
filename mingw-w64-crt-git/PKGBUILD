# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=crt
pkgbase=mingw-w64-${_realname}-git
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}-git"
pkgver=10.0.0.r120.gc0d9ec0f8
pkgrel=1
pkgdesc='MinGW-w64 CRT for Windows'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url='https://mingw-w64.sourceforge.io/'
license=('custom')
groups=("${MINGW_PACKAGE_PREFIX}-toolchain")
depends=("${MINGW_PACKAGE_PREFIX}-headers-git")
makedepends=("git"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-binutils"
             "${MINGW_PACKAGE_PREFIX}-autotools")
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
options=('!strip' 'staticlibs' '!buildflags' '!emptydirs')
source=("mingw-w64"::"git+https://git.code.sf.net/p/mingw-w64/mingw-w64"
        0001-Allow-to-use-bessel-and-complex-functions-without-un.patch
        0002-DirectX-9-fixes-for-VLC.patch
        9001-crt-Mark-atexit-as-DATA-because-it-s-always-overridd.patch
        9002-crt-Provide-wrappers-for-exit-in-libmingwex.patch
        9003-crt-Implement-standard-conforming-termination-suppor.patch
        9004-crt-Regenerate-Makefile.in.patch)
sha256sums=('SKIP'
            'd641257f7e1469aff89adc33e57702b75fe9667ca035978f890eae1020b6814c'
            '09b1c7b62f666a07609af57e10c2b0ad815b78356f4b0f1fb6d827a1109a0ec7'
            '7507ab6a1ff138d3487fb5964a2b5c7dcfbfecf84a2f84f22ef8abd2f743ee12'
            'fcd54052761a3040b37035499babc7477480f453675c7704fb9a6e40571a7b3d'
            '975528b1157ff221ea7b9878a6a05ae660dd0f6ffbc16a6efd3224ecd87dfa90'
            '5cd8f926e003fac08760310fb7dc9410748e55e2b7f001b4bb015c255fd57d45')

pkgver() {
  cd "${srcdir}/mingw-w64"
  git describe --long ${_commit} | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^v//g'
}

prepare() {
  cd ${srcdir}/mingw-w64
  git clean -fdx

  git apply "${srcdir}/9001-crt-Mark-atexit-as-DATA-because-it-s-always-overridd.patch"
  git apply "${srcdir}/9002-crt-Provide-wrappers-for-exit-in-C-files.patch"
  git apply "${srcdir}/9003-crt-Implement-standard-conforming-termination-suppor.patch"
  git apply "${srcdir}/9004-crt-Regenerate-Makefile.in.patch"

  git apply "${srcdir}/0001-Allow-to-use-bessel-and-complex-functions-without-un.patch"
  git apply "${srcdir}/0002-DirectX-9-fixes-for-VLC.patch"
}

build() {
  msg "Building ${MSYSTEM} CRT"
  local _crt_configure_args
  case "$CARCH" in
    i686)
      _crt_configure_args="--disable-lib64 --enable-lib32"
    ;;
    x86_64)
      _crt_configure_args="--disable-lib32 --enable-lib64"
    ;;
    armv7)
      _crt_configure_args="--disable-lib32 --disable-lib64 --enable-libarm32"
    ;;
    aarch64)
      _crt_configure_args="--disable-lib32 --disable-lib64 --disable-libarm32 --enable-libarm64"
    ;;
  esac

  local _default_msvcrt=msvcrt
  if [[ $MINGW_PACKAGE_PREFIX == *-clang-* ]] || [[ $MINGW_PACKAGE_PREFIX == *-ucrt-* ]]; then
    _default_msvcrt=ucrt
  fi

  [[ -d ${srcdir}/build-${MSYSTEM} ]] && rm -rf ${srcdir}/build-${MSYSTEM}
  mkdir -p ${srcdir}/build-${MSYSTEM} && cd ${srcdir}/build-${MSYSTEM}

  ${srcdir}/mingw-w64/mingw-w64-crt/configure \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --with-default-msvcrt=${_default_msvcrt} \
    --enable-wildcard \
    --disable-dependency-tracking \
    ${_crt_configure_args}

  make
}

package() {
  msg "Installing ${MSYSTEM} crt"
  cd ${srcdir}/build-${MSYSTEM}
  make DESTDIR=${pkgdir} install-strip

  # Create empty dummy archives, to avoid failing when the compiler driver
  # adds -lssp -lssh_nonshared when linking.
  ar rcs "${pkgdir}"${MINGW_PREFIX}/lib/libssp.a
  ar rcs "${pkgdir}"${MINGW_PREFIX}/lib/libssp_nonshared.a

  msg "Installing MinGW-w64 licenses"
  install -Dm644 ${srcdir}/mingw-w64/COPYING ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING
  install -Dm644 ${srcdir}/mingw-w64/COPYING.MinGW-w64/COPYING.MinGW-w64.txt ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.MinGW-w64.txt
  install -Dm644 ${srcdir}/mingw-w64/COPYING.MinGW-w64-runtime/COPYING.MinGW-w64-runtime.txt ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.MinGW-w64-runtime.txt
}
